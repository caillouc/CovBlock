{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/list-news/article-box/article-box.component.ts","webpack:///src/app/list-news/article-box/article-box.component.html","webpack:///src/app/list-news/list-news.component.ts","webpack:///src/app/list-news/list-news.component.html","webpack:///src/app/news.service.ts","webpack:///src/app/side-content/side-content.component.ts","webpack:///src/app/side-content/side-content.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ArticleBoxComponent","liked","like","author","source","content","description","ListNewsComponent","newsService","spin","data_requested","set_callback","bind","b","set_spin","data","fetch_data","subscribe","d","console","log","sources","painting","set_sources","NewsService","http","api","pourcentage","exceptions","country","category","value","callback","f","callback2","newSources","get","toString","length","map","s","slice","providedIn","SideContentComponent","showExeptions","name","toppings","toppingList","set_callback2","updateSourcesSide","get_sources","change_api","change_pourcentage","change_country","change_categorie","change_exception","changedAPI","changedPourcentage","changedCategorie","changedCountry","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'my-app';\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Document</title>\n</head>\n<body>\n  <div class=\"example-container\">\n  <mat-toolbar color=\"primary\" class=\"example-toolbar\">\n    <button mat-icon-button color=\"white\" (click)=\"side.toggle()\"><mat-icon>menu</mat-icon></button>\n    <h1 class=\"example-app-name\">CovBlock</h1>\n  </mat-toolbar>\n    <mat-sidenav-container [hasBackdrop]=\"false\" class=\"example-sidenav-container\">\n      \n      <mat-sidenav #side opened=\"true\" [mode]=\"'over'\" style=\"width: 18%;\">\n            <app-side-content>\n            </app-side-content>    \n        </mat-sidenav>\n      <mat-sidenav-content>\n        <app-list-news>\n          \n        </app-list-news>\n      </mat-sidenav-content>\n    </mat-sidenav-container>\n  </div>\n</body>\n</html>\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule} from '@angular/material/toolbar';\nimport { MatSliderModule } from '@angular/material/slider'; \nimport { MatFormFieldModule } from '@angular/material/form-field'; \nimport { MatSelectModule } from '@angular/material/select'; \nimport { MatCardModule } from '@angular/material/card'; \nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatButtonModule} from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle'; \nimport { MatGridListModule } from '@angular/material/grid-list'\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner'; \nimport { ReactiveFormsModule } from '@angular/forms';\n\n//Nos composants\nimport { SideContentComponent } from './side-content/side-content.component';\nimport { ListNewsComponent } from './list-news/list-news.component';\nimport { ArticleBoxComponent } from './list-news/article-box/article-box.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SideContentComponent,\n    ListNewsComponent,\n    ArticleBoxComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatSliderModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    HttpClientModule,\n    MatCardModule,\n    MatDividerModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatGridListModule,\n    MatProgressSpinnerModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {Input} from '@angular/core';\n\n\n@Component({\n  selector: 'app-article-box',\n  templateUrl: './article-box.component.html',\n  styleUrls: ['./article-box.component.css']\n})\nexport class ArticleBoxComponent implements OnInit {\n\n  @Input() title;\n  @Input() author;\n  @Input() source;\n  @Input() content;\n  @Input() description;\n  @Input() link;\n  @Input() img;\n  @Input() time;\n\n  liked = false;\n\n  like(){\n    this.liked = !this.liked;\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<mat-card  class=\"example-card mat-elevation-z23\">\n  <mat-card-header>\n    <!-- <div mat-card-avatar class=\"example-header-image\" style=\"background-image: url('{{img}}');\"></div> -->\n    <mat-card-title>\n      <a href={{link}}>\n        {{title}}\n      </a>\n    </mat-card-title>\n    <mat-card-subtitle>{{source}}</mat-card-subtitle>\n  </mat-card-header>\n  <img mat-card-image src={{img}}>\n  <mat-card-content>\n    <p>{{description}}</p>\n  </mat-card-content>\n     <mat-card-actions layout=\"row\" layout-align=\"right\">\n      <span class=\"example-fill-remaining-space\" flex></span>\n      <span class=\"topnav-right\">\n        <button (click)=\"like()\" mat-stroked-button color=\"primary\" class=\"button-like mat-elevation-z2\">\n          <mat-icon aria-hidden=\"false\" aria-label=\"Example heart icon\" *ngIf=\"liked\">favorite</mat-icon>\n          <mat-icon aria-hidden=\"false\" aria-label=\"Example heart icon\" *ngIf=\"!liked\">favorite_border</mat-icon>\n        </button>\n      </span>\n  </mat-card-actions>\n</mat-card>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { NewsService } from '../news.service';\n\n@Component({\n  selector: 'app-list-news',\n  templateUrl: './list-news.component.html',\n  styleUrls: ['./list-news.component.css']\n})\nexport class ListNewsComponent implements OnInit {\n\n  public data;\n  public sources;\n  public painting;\n  public spin: Boolean = true;\n  constructor(private newsService:NewsService) { }\n\n  ngOnInit(): void {\n    this.data_requested();\n    this.newsService.set_callback(this.data_requested.bind(this));\n  }\n\n  set_spin(b:boolean){\n    this.spin = b;\n  }\n\n  \n  data_requested(){\n    this.set_spin(true);\n    this.data = null;\n    this.newsService.fetch_data().subscribe(  \n      d =>\n      {\n        console.log(d);\n        this.data = d;\n        this.sources = d.sources;\n        this.painting = d.painting;\n        this.newsService.set_sources(this.sources)\n        this.set_spin(false);\n      }\n    );\n    \n  }\n\n}\n","<div id=\"main\">\n    <div *ngIf=\"data\">\n        <img class=\"painting\" src={{data.painting}} style=\"width:25%; float: right;\" alt=\"Some Art :)\">\n        <div *ngFor=\"let article of data.articles\">\n            <app-article-box class=\"box\"\n                                title={{article.title}} \n                                author={{article.author}} \n                                source={{article.source.name}}\n                                content={{article.content}} \n                                description={{article.description}}\n                                link={{article.url}}\n                                img={{article.urlToImage}} \n                                time={{article.publishedAt}}\n                                *ngIf=\"article\"></app-article-box>\n        </div>\n    </div>\n    <mat-spinner *ngIf=\"spin\"></mat-spinner>\n</div>\n    ","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewsService {\n  private data;\n  private api = \"google\";\n  public sources;\n  private pourcentage = 100;\n  private callback;\n  private callback2;\n  private exceptions = [];\n  private country = \"\";\n  private category = \"\";\n  constructor(private http: HttpClient) { }\n\n  change_api(value){\n    console.log(value);\n    this.api = value.value;\n    this.callback();\n  }\n\n  change_pourcentage(value){\n    console.log(value);\n    this.pourcentage = value.value;\n    this.callback();\n  }\n\n  change_categorie(value){\n    console.log(value);\n    this.category = value.value;\n    this.callback();\n  }\n\n  change_country(value){\n    console.log(value);\n    this.country = value.value;\n    this.callback();\n  }\n\n  change_exception(value){\n    console.log(value);\n    this.exceptions = value.value;\n    this.callback();\n  }\n\n  set_callback(f){\n    this.callback = f;\n  }\n  set_callback2(f) {\n    this.callback2 = f;\n  }\n\n  set_sources(newSources){\n    this.sources = newSources;  \n    this.callback2(this.sources);\n  }\n\n  get_sources(){\n    return this.sources;\n  }\n\n  fetch_data(){\n    return this.http.get<any>(\"http://localhost:1415/news?blockingPourcentage=\" + this.pourcentage.toString() +\n    (\"&api=\" + this.api) + \n    (this.country === \"\" ? \"\" : \"&country=\" + this.country.toString()) +\n    (this.category === \"\" ? \"\" : \"&category=\" + this.category.toString()) +\n    //TODO change check for empty array\n    (this.exceptions.length === 0 ? \"\" : \"&exception=\" + this.exceptions.map(s => s + \"_\").toString().slice(0, -1))\n    ) \n  }\n\n  get_data(){\n    return this.data;\n  }\n}\n","import { Component, OnInit} from '@angular/core';\nimport { NewsService } from '../news.service';\nimport {FormControl} from '@angular/forms';\n\n@Component({\n  selector: 'app-side-content',\n  templateUrl: './side-content.component.html',\n  styleUrls: ['./side-content.component.css']\n})\nexport class SideContentComponent implements OnInit {\n\n  showExeptions = true;\n  sources = {id:\"nothhing\", name:\"Nothing\"};\n  constructor(private newsService : NewsService) { }\n\n  ngOnInit(): void {\n    this.newsService.set_callback2(this.updateSourcesSide.bind(this));\n    this.sources = this.newsService.get_sources();\n  }\n\n  updateSourcesSide(newSources){\n    this.sources = newSources;\n  }\n\n  changedAPI(value){\n    this.showExeptions = value.value === \"nyt\" ? false : true;\n    this.newsService.change_api(value);\n  }\n\n  changedPourcentage(value){\n    this.newsService.change_pourcentage(value);\n  }\n\n  changedCountry(value){\n    this.newsService.change_country(value);\n  }\n\n  changedCategorie(value){\n    this.newsService.change_categorie(value);\n  }\n\n  changedException(value) {\n    this.newsService.change_exception(value);\n  }\n\n  toppings = new FormControl();\n  toppingList: string[] = ['Extra cheese', 'Mushroom', 'Onion', 'Pepperoni', 'Sausage', 'Tomato'];\n}\n","\n<h2 class=\"text-side\">Source</h2>\n<mat-button-toggle-group horizontal (change)=\"changedAPI($event)\" name=\"Categorie\" aria-label=\"Font Style\" class=\"grid\" value=\"google\">\n    <mat-button-toggle value=\"google\">Google</mat-button-toggle>\n    <mat-button-toggle value=\"nyt\">New York Times</mat-button-toggle>\n</mat-button-toggle-group>\n\n<mat-divider class=\"side-div\"></mat-divider>\n\n<div>\n<h2 class=\"text-side\">Filtering Percentage</h2>\n    <mat-slider color=\"primary\" value=\"100\" thumbLabel (change)=\"changedPourcentage($event)\"></mat-slider>\n</div>\n\n<mat-divider class=\"side-div\" *ngIf=\"showExeptions\"></mat-divider>\n<h2 class=\"text-side\" *ngIf=\"showExeptions\">Exceptions</h2>\n\n<mat-form-field class=\"selector\" appearance=\"fill\" *ngIf=\"showExeptions\">\n    <mat-label>Select</mat-label>\n    <mat-select multiple (selectionChange)=\"changedException($event)\">        \n        <mat-option *ngFor=\"let pair of sources\" [value]=\"pair.id\">{{pair.name}}</mat-option>\n    </mat-select>\n</mat-form-field>\n\n<mat-divider class=\"side-div\"></mat-divider>\n<h2 class=\"text-side\">Category</h2>\n\n<mat-button-toggle-group class=\"grid\" (change)=\"changedCategorie($event)\" vertical name=\"Categorie\" aria-label=\"Font Style\" value=\"\">\n            <mat-button-toggle value=\"\">All</mat-button-toggle>\n            <mat-button-toggle value=\"business\">Business</mat-button-toggle>\n            <mat-button-toggle value=\"entertainment\">Entertainment</mat-button-toggle>\n            <mat-button-toggle value=\"general\">General</mat-button-toggle>\n            <mat-button-toggle value=\"health\">Health</mat-button-toggle>\n            <mat-button-toggle value=\"science\">Science</mat-button-toggle>\n            <mat-button-toggle value=\"sports\">Sports</mat-button-toggle>\n            <mat-button-toggle value=\"technology\">Technology</mat-button-toggle>\n</mat-button-toggle-group>\n  \n\n<mat-divider class=\"side-div\"></mat-divider>\n<h2 class=\"text-side\">Country</h2>\n<mat-form-field class=\"selector\" appearance=\"fill\">\n    <mat-label>Select</mat-label>\n    <mat-select value=\"\" (selectionChange)=\"changedCountry($event)\">\n        <mat-option value=\"\">All</mat-option>\n        <mat-option value=\"ar\">Argentina</mat-option>\n        <mat-option value=\"at\">Austria</mat-option>\n        <mat-option value=\"au\">Australia</mat-option>\n        <mat-option value=\"be\">Belgium</mat-option>\n        <mat-option value=\"bg\">Bulgaria</mat-option>\n        <mat-option value=\"br\">Brazil</mat-option>\n        <mat-option value=\"ca\">Canada</mat-option>\n        <mat-option value=\"cn\">China</mat-option>\n        <mat-option value=\"co\">Colombia</mat-option>\n        <mat-option value=\"cu\">Cuba</mat-option>\n        <mat-option value=\"cz\">Czechia</mat-option>\n        <mat-option value=\"eg\">Egypt</mat-option>\n        <mat-option value=\"fr\">France</mat-option>\n        <mat-option value=\"de\">Germany</mat-option>\n        <mat-option value=\"gr\">Greece</mat-option>\n        <mat-option value=\"hk\">Hong Kong</mat-option>\n        <mat-option value=\"hu\">Hungary</mat-option>\n        <mat-option value=\"id\">Indonesia</mat-option>\n        <mat-option value=\"ie\">Ireland</mat-option>\n        <mat-option value=\"il\">Israel</mat-option>\n        <mat-option value=\"in\">India</mat-option>\n        <mat-option value=\"it\">Italy</mat-option>\n        <mat-option value=\"jp\">Japan</mat-option>\n        <mat-option value=\"lt\">Lithuania</mat-option>\n        <mat-option value=\"lv\">Latvia</mat-option>\n        <mat-option value=\"ma\">Morocco</mat-option>\n        <mat-option value=\"mx\">Mexico</mat-option>\n        <mat-option value=\"my\">Malaysia</mat-option>\n        <mat-option value=\"ng\">Nigeria</mat-option>\n        <mat-option value=\"nl\">Netherlands</mat-option>\n        <mat-option value=\"no\">Norway</mat-option>\n        <mat-option value=\"nz\">New Zealand</mat-option>\n        <mat-option value=\"ph\">Philippines</mat-option>\n        <mat-option value=\"pl\">Poland</mat-option>\n        <mat-option value=\"pt\">Portugal</mat-option>\n        <mat-option value=\"ro\">Romania</mat-option>\n        <mat-option value=\"kr\">Republic of Korea</mat-option>\n        <mat-option value=\"ru\">Russia</mat-option>\n        <mat-option value=\"sa\">Saudi Arabia</mat-option>\n        <mat-option value=\"rs\">Serbia</mat-option>\n        <mat-option value=\"se\">Sweden</mat-option>\n        <mat-option value=\"sg\">Singapore</mat-option>\n        <mat-option value=\"si\">Slovenia</mat-option>\n        <mat-option value=\"sk\">Slovakia</mat-option>\n        <mat-option value=\"ch\">Switzerland</mat-option>\n        <mat-option value=\"th\">Thailand</mat-option>\n        <mat-option value=\"tr\">Turkey</mat-option>\n        <mat-option value=\"tw\">Tawian</mat-option>\n        <mat-option value=\"ua\">Ukraine</mat-option>\n        <mat-option value=\"ae\">United Arab Emirates</mat-option>\n        <mat-option value=\"gb\">United Kingdom</mat-option>\n        <mat-option value=\"us\">United States of America</mat-option>\n        <mat-option value=\"ve\">Venezuela</mat-option>\n        <mat-option value=\"za\">South Africa</mat-option>\n    </mat-select>\n</mat-form-field>\n\n\n ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}