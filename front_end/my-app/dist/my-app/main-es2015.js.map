{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/list-news/article-box/article-box.component.ts","./src/app/list-news/article-box/article-box.component.html","./src/app/list-news/list-news.component.ts","./src/app/list-news/list-news.component.html","./src/app/news.service.ts","./src/app/side-content/side-content.component.ts","./src/app/side-content/side-content.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'my-app';\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Document</title>\n</head>\n<body>\n  <div class=\"example-container\">\n  <mat-toolbar color=\"primary\" class=\"example-toolbar\">\n    <button mat-icon-button color=\"white\" (click)=\"side.toggle()\"><mat-icon>menu</mat-icon></button>\n    <h1 class=\"example-app-name\">CovBlock</h1>\n  </mat-toolbar>\n    <mat-sidenav-container [hasBackdrop]=\"false\" class=\"example-sidenav-container\">\n      \n      <mat-sidenav #side opened=\"true\" [mode]=\"'over'\" style=\"width: 18%;\">\n            <app-side-content>\n            </app-side-content>    \n        </mat-sidenav>\n      <mat-sidenav-content>\n        <app-list-news>\n          \n        </app-list-news>\n      </mat-sidenav-content>\n    </mat-sidenav-container>\n  </div>\n</body>\n</html>\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule} from '@angular/material/toolbar';\nimport { MatSliderModule } from '@angular/material/slider'; \nimport { MatFormFieldModule } from '@angular/material/form-field'; \nimport { MatSelectModule } from '@angular/material/select'; \nimport { MatCardModule } from '@angular/material/card'; \nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatButtonModule} from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle'; \nimport { MatGridListModule } from '@angular/material/grid-list'\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner'; \nimport { ReactiveFormsModule } from '@angular/forms';\n\n//Nos composants\nimport { SideContentComponent } from './side-content/side-content.component';\nimport { ListNewsComponent } from './list-news/list-news.component';\nimport { ArticleBoxComponent } from './list-news/article-box/article-box.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SideContentComponent,\n    ListNewsComponent,\n    ArticleBoxComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatSliderModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    HttpClientModule,\n    MatCardModule,\n    MatDividerModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatGridListModule,\n    MatProgressSpinnerModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {Input} from '@angular/core';\n\n\n@Component({\n  selector: 'app-article-box',\n  templateUrl: './article-box.component.html',\n  styleUrls: ['./article-box.component.css']\n})\nexport class ArticleBoxComponent implements OnInit {\n\n  @Input() title;\n  @Input() author;\n  @Input() source;\n  @Input() content;\n  @Input() description;\n  @Input() link;\n  @Input() img;\n  @Input() time;\n\n  liked = false;\n\n  like(){\n    this.liked = !this.liked;\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<mat-card  class=\"example-card mat-elevation-z23\">\n  <mat-card-header>\n    <!-- <div mat-card-avatar class=\"example-header-image\" style=\"background-image: url('{{img}}');\"></div> -->\n    <mat-card-title>\n      <a href={{link}}>\n        {{title}}\n      </a>\n    </mat-card-title>\n    <mat-card-subtitle>{{source}}</mat-card-subtitle>\n  </mat-card-header>\n  <img mat-card-image src={{img}}>\n  <mat-card-content>\n    <p>{{description}}</p>\n  </mat-card-content>\n     <mat-card-actions layout=\"row\" layout-align=\"right\">\n      <span class=\"example-fill-remaining-space\" flex></span>\n      <span class=\"topnav-right\">\n        <button (click)=\"like()\" mat-stroked-button color=\"primary\" class=\"button-like mat-elevation-z2\">\n          <mat-icon aria-hidden=\"false\" aria-label=\"Example heart icon\" *ngIf=\"liked\">favorite</mat-icon>\n          <mat-icon aria-hidden=\"false\" aria-label=\"Example heart icon\" *ngIf=\"!liked\">favorite_border</mat-icon>\n        </button>\n      </span>\n  </mat-card-actions>\n</mat-card>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { NewsService } from '../news.service';\n\n@Component({\n  selector: 'app-list-news',\n  templateUrl: './list-news.component.html',\n  styleUrls: ['./list-news.component.css']\n})\nexport class ListNewsComponent implements OnInit {\n\n  public data;\n  public sources;\n  public painting;\n  public spin: Boolean = true;\n  constructor(private newsService:NewsService) { }\n\n  ngOnInit(): void {\n    this.data_requested();\n    this.newsService.set_callback(this.data_requested.bind(this));\n  }\n\n  set_spin(b:boolean){\n    this.spin = b;\n  }\n\n  \n  data_requested(){\n    this.set_spin(true);\n    this.data = null;\n    this.newsService.fetch_data().subscribe(  \n      d =>\n      {\n        console.log(d);\n        this.data = d;\n        this.sources = d.sources;\n        this.painting = d.painting;\n        this.newsService.set_sources(this.sources)\n        this.set_spin(false);\n      }\n    );\n    \n  }\n\n}\n","<div id=\"main\">\n    <div *ngIf=\"data\">\n        <img class=\"painting\" src={{data.painting}} style=\"width:25%; float: right;\" alt=\"Some Art :)\">\n        <div *ngFor=\"let article of data.articles\">\n            <app-article-box class=\"box\"\n                                title={{article.title}} \n                                author={{article.author}} \n                                source={{article.source.name}}\n                                content={{article.content}} \n                                description={{article.description}}\n                                link={{article.url}}\n                                img={{article.urlToImage}} \n                                time={{article.publishedAt}}\n                                *ngIf=\"article\"></app-article-box>\n        </div>\n    </div>\n    <mat-spinner *ngIf=\"spin\"></mat-spinner>\n</div>\n    ","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewsService {\n  private data;\n  private api = \"google\";\n  public sources;\n  private pourcentage = 100;\n  private callback;\n  private callback2;\n  private exceptions = [];\n  private country = \"\";\n  private category = \"\";\n  constructor(private http: HttpClient) { }\n\n  change_api(value){\n    console.log(value);\n    this.api = value.value;\n    this.callback();\n  }\n\n  change_pourcentage(value){\n    console.log(value);\n    this.pourcentage = value.value;\n    this.callback();\n  }\n\n  change_categorie(value){\n    console.log(value);\n    this.category = value.value;\n    this.callback();\n  }\n\n  change_country(value){\n    console.log(value);\n    this.country = value.value;\n    this.callback();\n  }\n\n  change_exception(value){\n    console.log(value);\n    this.exceptions = value.value;\n    this.callback();\n  }\n\n  set_callback(f){\n    this.callback = f;\n  }\n  set_callback2(f) {\n    this.callback2 = f;\n  }\n\n  set_sources(newSources){\n    this.sources = newSources;  \n    this.callback2(this.sources);\n  }\n\n  get_sources(){\n    return this.sources;\n  }\n\n  fetch_data(){\n    return this.http.get<any>(\"http://10.0.0.4:1415/news?blockingPourcentage=\" + this.pourcentage.toString() +\n    (\"&api=\" + this.api) + \n    (this.country === \"\" ? \"\" : \"&country=\" + this.country.toString()) +\n    (this.category === \"\" ? \"\" : \"&category=\" + this.category.toString()) +\n    //TODO change check for empty array\n    (this.exceptions.length === 0 ? \"\" : \"&exception=\" + this.exceptions.map(s => s + \"_\").toString().slice(0, -1))\n    ) \n  }\n\n  get_data(){\n    return this.data;\n  }\n}\n","import { Component, OnInit} from '@angular/core';\nimport { NewsService } from '../news.service';\nimport {FormControl} from '@angular/forms';\n\n@Component({\n  selector: 'app-side-content',\n  templateUrl: './side-content.component.html',\n  styleUrls: ['./side-content.component.css']\n})\nexport class SideContentComponent implements OnInit {\n\n  showExeptions = true;\n  sources = {id:\"nothhing\", name:\"Nothing\"};\n  constructor(private newsService : NewsService) { }\n\n  ngOnInit(): void {\n    this.newsService.set_callback2(this.updateSourcesSide.bind(this));\n    this.sources = this.newsService.get_sources();\n  }\n\n  updateSourcesSide(newSources){\n    this.sources = newSources;\n  }\n\n  changedAPI(value){\n    this.showExeptions = value.value === \"nyt\" ? false : true;\n    this.newsService.change_api(value);\n  }\n\n  changedPourcentage(value){\n    this.newsService.change_pourcentage(value);\n  }\n\n  changedCountry(value){\n    this.newsService.change_country(value);\n  }\n\n  changedCategorie(value){\n    this.newsService.change_categorie(value);\n  }\n\n  changedException(value) {\n    this.newsService.change_exception(value);\n  }\n\n  toppings = new FormControl();\n  toppingList: string[] = ['Extra cheese', 'Mushroom', 'Onion', 'Pepperoni', 'Sausage', 'Tomato'];\n}\n","\n<h2 class=\"text-side\">Source</h2>\n<mat-button-toggle-group horizontal (change)=\"changedAPI($event)\" name=\"Categorie\" aria-label=\"Font Style\" class=\"grid\" value=\"google\">\n    <mat-button-toggle value=\"google\">Google</mat-button-toggle>\n    <mat-button-toggle value=\"nyt\">New York Times</mat-button-toggle>\n</mat-button-toggle-group>\n\n<mat-divider class=\"side-div\"></mat-divider>\n\n<div>\n<h2 class=\"text-side\">Filtering Percentage</h2>\n    <mat-slider color=\"primary\" value=\"100\" thumbLabel (change)=\"changedPourcentage($event)\"></mat-slider>\n</div>\n\n<mat-divider class=\"side-div\" *ngIf=\"showExeptions\"></mat-divider>\n<h2 class=\"text-side\" *ngIf=\"showExeptions\">Exceptions</h2>\n\n<mat-form-field class=\"selector\" appearance=\"fill\" *ngIf=\"showExeptions\">\n    <mat-label>Select</mat-label>\n    <mat-select multiple (selectionChange)=\"changedException($event)\">        \n        <mat-option *ngFor=\"let pair of sources\" [value]=\"pair.id\">{{pair.name}}</mat-option>\n    </mat-select>\n</mat-form-field>\n\n<mat-divider class=\"side-div\"></mat-divider>\n<h2 class=\"text-side\">Category</h2>\n\n<mat-button-toggle-group class=\"grid\" (change)=\"changedCategorie($event)\" vertical name=\"Categorie\" aria-label=\"Font Style\" value=\"\">\n            <mat-button-toggle value=\"\">All</mat-button-toggle>\n            <mat-button-toggle value=\"business\">Business</mat-button-toggle>\n            <mat-button-toggle value=\"entertainment\">Entertainment</mat-button-toggle>\n            <mat-button-toggle value=\"general\">General</mat-button-toggle>\n            <mat-button-toggle value=\"health\">Health</mat-button-toggle>\n            <mat-button-toggle value=\"science\">Science</mat-button-toggle>\n            <mat-button-toggle value=\"sports\">Sports</mat-button-toggle>\n            <mat-button-toggle value=\"technology\">Technology</mat-button-toggle>\n</mat-button-toggle-group>\n  \n\n<mat-divider class=\"side-div\"></mat-divider>\n<h2 class=\"text-side\">Country</h2>\n<mat-form-field class=\"selector\" appearance=\"fill\">\n    <mat-label>Select</mat-label>\n    <mat-select value=\"\" (selectionChange)=\"changedCountry($event)\">\n        <mat-option value=\"\">All</mat-option>\n        <mat-option value=\"ar\">Argentina</mat-option>\n        <mat-option value=\"at\">Austria</mat-option>\n        <mat-option value=\"au\">Australia</mat-option>\n        <mat-option value=\"be\">Belgium</mat-option>\n        <mat-option value=\"bg\">Bulgaria</mat-option>\n        <mat-option value=\"br\">Brazil</mat-option>\n        <mat-option value=\"ca\">Canada</mat-option>\n        <mat-option value=\"cn\">China</mat-option>\n        <mat-option value=\"co\">Colombia</mat-option>\n        <mat-option value=\"cu\">Cuba</mat-option>\n        <mat-option value=\"cz\">Czechia</mat-option>\n        <mat-option value=\"eg\">Egypt</mat-option>\n        <mat-option value=\"fr\">France</mat-option>\n        <mat-option value=\"de\">Germany</mat-option>\n        <mat-option value=\"gr\">Greece</mat-option>\n        <mat-option value=\"hk\">Hong Kong</mat-option>\n        <mat-option value=\"hu\">Hungary</mat-option>\n        <mat-option value=\"id\">Indonesia</mat-option>\n        <mat-option value=\"ie\">Ireland</mat-option>\n        <mat-option value=\"il\">Israel</mat-option>\n        <mat-option value=\"in\">India</mat-option>\n        <mat-option value=\"it\">Italy</mat-option>\n        <mat-option value=\"jp\">Japan</mat-option>\n        <mat-option value=\"lt\">Lithuania</mat-option>\n        <mat-option value=\"lv\">Latvia</mat-option>\n        <mat-option value=\"ma\">Morocco</mat-option>\n        <mat-option value=\"mx\">Mexico</mat-option>\n        <mat-option value=\"my\">Malaysia</mat-option>\n        <mat-option value=\"ng\">Nigeria</mat-option>\n        <mat-option value=\"nl\">Netherlands</mat-option>\n        <mat-option value=\"no\">Norway</mat-option>\n        <mat-option value=\"nz\">New Zealand</mat-option>\n        <mat-option value=\"ph\">Philippines</mat-option>\n        <mat-option value=\"pl\">Poland</mat-option>\n        <mat-option value=\"pt\">Portugal</mat-option>\n        <mat-option value=\"ro\">Romania</mat-option>\n        <mat-option value=\"kr\">Republic of Korea</mat-option>\n        <mat-option value=\"ru\">Russia</mat-option>\n        <mat-option value=\"sa\">Saudi Arabia</mat-option>\n        <mat-option value=\"rs\">Serbia</mat-option>\n        <mat-option value=\"se\">Sweden</mat-option>\n        <mat-option value=\"sg\">Singapore</mat-option>\n        <mat-option value=\"si\">Slovenia</mat-option>\n        <mat-option value=\"sk\">Slovakia</mat-option>\n        <mat-option value=\"ch\">Switzerland</mat-option>\n        <mat-option value=\"th\">Thailand</mat-option>\n        <mat-option value=\"tr\">Turkey</mat-option>\n        <mat-option value=\"tw\">Tawian</mat-option>\n        <mat-option value=\"ua\">Ukraine</mat-option>\n        <mat-option value=\"ae\">United Arab Emirates</mat-option>\n        <mat-option value=\"gb\">United Kingdom</mat-option>\n        <mat-option value=\"us\">United States of America</mat-option>\n        <mat-option value=\"ve\">Venezuela</mat-option>\n        <mat-option value=\"za\">South Africa</mat-option>\n    </mat-select>\n</mat-form-field>\n\n\n ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}